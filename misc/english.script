###############################################
# Grammar of English Derivational Morphology  #
# Copyright 2004 Mans Hulden                  #
# License: GPL                                $
###############################################

define CONS [b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z] ;
define CP [b|d|f|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z] ; !palatal cons
define VOW [a|e|i|o|u] ;

define Gemination [
[b (->) b b || [CONS |u] VOW _ %^ [VOW | y] ] .o.
[c (->) c k || [CONS |u] VOW _ %^ [VOW | y] ] .o.
[d (->) d d || [CONS |u] VOW _ %^ [VOW | y] ] .o. 
[f (->) f f || [CONS |u] VOW _ %^ [VOW | y] ] .o. 
[g (->) g g || [CONS |u] VOW _ %^ [VOW | y] ] .o. 
[l (->) l l || [CONS |u] VOW _ %^ [VOW | y] ] .o.
[m (->) m m || CONS VOW _ %^ [VOW | y]] .o. 
[n (->) n n || CONS VOW _ %^ [VOW | y] ] .o. 
[p (->) p p || [CONS |u] VOW _ %^ [VOW | y]] .o. 
[r (->) r r || CONS VOW _ %^ [VOW | y]] .o. 
[s (->) s s || [CONS |u] VOW _ %^ [VOW | y]] .o. 
[t (->) t t || [CONS | [q u]] VOW _ %^ [VOW | y]]
];


define NasalAssimilation [
[n -> r || [.#.|%^] i _ %^ r  ].o.
[n -> m || [.#.|%^] i _ %^ [m | p] ].o.
[n -> l || [.#.|%^] i _ %^ l  ]  
];

define ZeroFormations [
#ify^ation -> ifycation, apply^ant -> applicant, but library^an -> librarian (rule applies to relevant level 1 morphemes)
[[..] -> c || y %^ _ [[i t y] | [a n t] | [a l] | [a t e] | [ a t i o n] | [i o n]]] .o. 

#Alternate path to subtractively form celebrate -> celebrable, demand min 2*VOW before ate morph
[[a -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* _ t e %^ a b l e [%^ | .#.] ,, t -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* a _ e %^ a b l e [%^ | .#.] ,, e -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* a t _ %^ a b l e [%^ | .#.] ] | ?* ] .o. 

#Alternate path to subtractively form celebrate -> celebrant, demand min 2*VOW before ate morph
[[a -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* _ t e %^ a n t [%^ | .#.] ,, t -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* a _ e %^ a n t [%^ | .#.] ,, e -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* a t _ %^ a n t [%^ | .#.] ] | ?* ] .o. 

#Alternate path to subtractively form evacuate -> evacuee, demand min 2*VOW before ate morph
[[a -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* _ t e %^ é é [%^ | .#.] ,, t -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* a _ e %^ é é [%^ | .#.] ,, e -> 0 || (%-) [VOW | y] [? - %-]* [VOW | y] [? - %-]* a t _ %^ é é [%^ | .#.] ] | ?* ]
];

define LDeletion [l -> 0 || [CONS] l e %^ _ y .#. ,, e -> 0 || [CONS] l _ %^ l y .#.] ; #able^ly -> ably

define TripleSDeletion [s -> 0 || s _ %^ s ]; # pressship -> presship 

define ItyRules [

#anxiety, piety-type words
[o -> 0 || [p | x] i _ u s %^ i t y ,, u -> 0 || [p | x] i o _ s %^ i t y ,, s -> 0 || [p | x] i o u _ %^ i t y ,, i -> e || [p | x] i o u s %^ _ t y ] .o. 

#words where ous is preceded by (c VOW) or l lose the entire ous morpheme: frivolous -> frivolity, audacious -> audacity, promiscuous -> promiscuity
[o -> 0 || [[c VOW] | l] _ u s %^ i t y ,, u -> 0 || [[c VOW] | l] o _ s %^ i t y ,, s -> 0 || [[c VOW] | l] o u _ %^ i t y ]  .o.

#the general case is to drop the u. virtuous -> virtuosity
[u -> 0 || o _ s %^ i t y ] .o.

#a few exceptions: opaque + ity -> opacity (CHECK OPTIONAL)
[[q -> c || _ u e %^ i t y ,, u -> 0 || q _ e %^ i t y ,, e -> 0 || q u _ %^ i t y ] | ?*] .o.

!drop double i to avoid ...i+ity
[i -> 0 || _ %^ i t y ] 
];

#YDeletion applies to words like: morphology^ic -> morphologic
define YDeletion [y -> 0 || _ %^ i ];

#Y-replacement
define YReplacement [y -> i || \VOW _ %^ [\i & \']]; #spy^s -> spi^s, flying

define EEpenthesis [
#bypass some words
[[..] -> É || m o n a r c h %^ _ s .#. ] .o.  #monarch -> monarchs
[[..] -> e || [s | z | x | c h | s h ] _ %^ s .#. ] .o. #watch^s -> watche^s
[[..] -> e || i _ %^ [s | d] .#. ] .o. #spi^s -> spie^s
[[..] -> e || CONS %^ _ d .#. ]  # permit^d permit^ed
];

#this rule is so specific it should really be first, but gemination interferes with it
define EAbleRule [e -> l || a b l _ %^ i t y ,, l -> i || a b _ e %^ i t y ]; !able+ity -> ability

define Laxings [

#profound -> profundity, trisyllabic OU
[o -> 0 || _ u CONS CONS (e) %^ [ [i t y] | [a t ] | [a l] ]] .o.

[i -> 0 || VOW _ CP+ %^ i t y] .o.  #parity

[e -> 0 || _ VOW CP+ %^ [[i t y] | [a n t] | [a l] | [a t e] | [i o n] | [a t i o n] ] ] .o. !clarity (see clear^ing vs clear^ity)

#ize^ate -> izate, crane^al -> cranial, province^al -> provincial, etc., stricture^al -> strictural, theatre^al -> theatral
[e -> i || [CONS - [t | r | z]] _ %^ [[a l] | [a t e] | [a t i o n]] ] #level 1 morphemes only

];

define Elision [
[e -> 0 || CONS u _ %^ VOW ] .o.      #arguing
[e -> 0 || [c | g] _ %^ [e | i] ].o.  #raceable, changeable  (maybe this should be optional?)
[e -> 0 || \VOW [VOW | y] _ %^ e ].o. #hoed, dyeing
[e (->) 0 || VOW CP+ _ %^ VOW  ].o.   #movable, moving, being
[e -> 0 || i _ %^ i ,, i -> y ||  _ e %^ i ]  #dying, flying
];

define Cleanup [
[e -> 0 || e %^ _ e ] .o.
[é -> 0 || e %^ _ é ] .o.
[s (->) 0 || s %^ ' _ .#.] .o. # Optional pos 's del = accept both words' and words's
[É -> 0 ].o. #restore non-triggering null characters, marks non-sibilant epenthesis (e.g. monarchés)
[é -> e ].o. #restore non-triggering character e, pré -> pre
[%^ -> 0] ]; #remove morpheme boundary markers

define Rules [ Gemination .o. NasalAssimilation .o. ZeroFormations .o. LDeletion .o. TripleSDeletion .o. ItyRules .o. YDeletion .o. YReplacement .o. EEpenthesis .o. EAbleRule .o. Laxings .o. Elision .o. Cleanup ];


read lexc exceptions.lex
define Exceptions;
read lexc lexicon.lex
define Lexicon;

regex Exceptions .P. [Lexicon .o. Rules];